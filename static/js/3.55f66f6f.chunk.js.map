{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileDescriptionForm.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","alt","message","likesCount","PostForm","formik","useFormik","initialValues","post","onSubmit","values","resetForm","addNewPost","handleSubmit","name","onBlur","handleBlur","onChange","handleChange","value","placeholder","disabled","dirty","type","MyPosts","postsElements","posts","map","p","i","postsBlock","addPost","MyPostsContainer","connect","state","profilePage","newPostText","Contacts","contacts","err","errors","e","split","replace","toLowerCase","Object","keys","contact","title","isError","some","ProfileDescriptionForm","profile","closeEditMode","updateProfile","authorizedUserId","examValue","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","facebook","github","instagram","mainLink","twitter","vk","website","youtube","a","userId","checked","length","index","style","color","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","target","updateStatus","autoFocus","onDoubleClick","isOwner","ProfileDescription","goToEditMode","profileContacts","entries","onClick","ProfileInfo","savePhoto","avatar","photos","large","accept","files","Preloader","Profile","ProfileContainer","this","match","params","getUserProfile","getStatus","history","push","refreshProfile","oldProps","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.55f66f6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3BStp\",\"posts\":\"MyPosts_posts__2Eaxb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1myGU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__1Tzcz\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://cdn-icons-png.flaticon.com/512/149/149071.png' alt=''/>\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import { useFormik } from 'formik';\r\nimport React from 'react';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements =\r\n    props.posts.map((p, i) => <Post message={p.message} likesCount={p.likesCount} key={i} />);\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.post);\r\n  }\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <PostForm addNewPost={addNewPost} />\r\n      </div>\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst PostForm = (props) => {\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      post: ''\r\n    },\r\n    onSubmit: (values, { resetForm }) => {\r\n      props.addNewPost(values);\r\n      resetForm();\r\n    }\r\n  })\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <Textarea\r\n        name={'post'}\r\n        onBlur={formik.handleBlur}\r\n        onChange={formik.handleChange}\r\n        value={formik.values.post}\r\n        placeholder={'Enter your post'} />\r\n      <div>\r\n        <button\r\n          disabled={!formik.dirty}\r\n          type={'submit'}\r\n        >\r\n          Add post\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default MyPosts;","import { connect } from \"react-redux\";\r\nimport { addPost } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer;","import { useFormik } from \"formik\"\nimport { Input, InputLow } from \"../../common/FormsControls/FormsControls\"\n\nconst ProfileDescriptionForm = ({ profile, closeEditMode, updateProfile, authorizedUserId, errors }) => {\n\n  const examValue = (value) => {\n    return value ? value : '';\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      fullName: profile.fullName,\n      aboutMe: examValue(profile.aboutMe),\n      lookingForAJob: profile.lookingForAJob,\n      lookingForAJobDescription: examValue(profile.lookingForAJobDescription),\n      contacts: {\n        facebook: examValue(profile.contacts.facebook),\n        github: examValue(profile.contacts.github),\n        instagram: examValue(profile.contacts.instagram),\n        mainLink: examValue(profile.contacts.mainLink),\n        twitter: examValue(profile.contacts.twitter),\n        vk: examValue(profile.contacts.vk),\n        website: examValue(profile.contacts.website),\n        youtube: examValue(profile.contacts.youtube),\n      },\n    },\n    onSubmit: async (values) => {\n      await updateProfile({ ...values, userId: authorizedUserId });\n      closeEditMode();\n    }\n  })\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Input\n        title={'Имя'}\n        name={'fullName'}\n        onChange={formik.handleChange}\n        value={formik.values.fullName}\n        placeholder={'fullName'}\n      />\n      <Input\n        title={'Обо мне'}\n        name={'aboutMe'}\n        onChange={formik.handleChange}\n        value={formik.values.aboutMe}\n        placeholder={'aboutMe'}\n      />\n      <input\n        name={'lookingForAJob'}\n        checked={formik.values.lookingForAJob}\n        onChange={formik.handleChange}\n        type={'checkbox'}\n      /> looking For A Job\n      {\n        formik.values.lookingForAJob && <Input\n          title={'Описание для поиска работы'}\n          name={'lookingForAJobDescription'}\n          onChange={formik.handleChange}\n          value={formik.values.lookingForAJobDescription}\n          placeholder={'looking For A Job Description'}\n        />\n      }\n      <Contacts contacts={formik.values.contacts} onChange={formik.handleChange} errors={errors} />\n      <div>\n        <button\n          type={'submit'}\n        >\n          Send\n        </button>\n      </div>\n      {!!errors.length && errors.map((err, index) => <div key={index} style={{ color: 'red' }}><strong>Ошибка: </strong>{err}</div>)}\n    </form>\n  )\n}\n\nconst Contacts = ({ contacts, onChange, errors }) => {\n  let err = errors.map(e => {\n    return e.split('->')[1].replace(')', '').toLowerCase()\n  })\n\n  return (\n    <div>\n      {Object.keys(contacts).map((contact) =>\n        <InputLow\n          key={contact}\n          title={contact}\n          isError={err.some(e => e === contact.toLowerCase())}\n          name={`contacts.${contact}`}\n          onChange={onChange}\n          value={contacts[`${contact}`]}\n          placeholder={contact}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default ProfileDescriptionForm","import React, { useEffect, useState } from \"react\";\n// import s from './ProfileInfo.module.css';\n\nconst ProfileStatus = (props) => {\n\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status])\n\n  const activateEditMode = () => {\n    if (!props.isOwner) {\n      return\n    }\n    setEditMode(true);\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n\n  const onStatusChange = (e) => {\n    setStatus(e.target.value)\n  }\n\n  return (\n    <div>\n      {editMode\n        ? <div>\n          Статус: <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus type=\"text\" value={status} />\n        </div>\n        : <div>\n          <span onDoubleClick={activateEditMode}><strong>Статус:</strong> {props.status || 'Нет статуса'}</span>\n        </div>\n      }\n    </div >\n  );\n}\n\nexport default ProfileStatus;","import React, { useEffect, useState } from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileDescriptionForm from './ProfileDescriptionForm';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, updateProfile, authorizedUserId, errors }) => {\r\n\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (errors.length) {\r\n      setEditMode(true);\r\n    }\r\n  }, [errors, authorizedUserId])\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.avatar}>\r\n        <img src={profile?.photos?.large || 'https://www.kindpng.com/picc/m/130-1300217_user-icon-member-icon-png-transparent-png.png'}\r\n          alt=\"avatar\"\r\n        />\r\n        {isOwner && editMode && <input type={'file'} accept=\".png, .jpg, .jpeg\" onChange={onMainPhotoSelected} />}\r\n      </div>\r\n      {\r\n        !editMode\r\n          ? <ProfileDescription\r\n            profile={profile}\r\n            isOwner={isOwner}\r\n            goToEditMode={() => setEditMode(true)}\r\n          />\r\n          : <ProfileDescriptionForm\r\n            errors={errors}\r\n            authorizedUserId={authorizedUserId}\r\n            updateProfile={updateProfile}\r\n            profile={profile}\r\n            closeEditMode={() => setEditMode(false)}\r\n          />\r\n      }\r\n      <ProfileStatus\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n        isOwner={isOwner}\r\n      />\r\n    </div >\r\n  );\r\n}\r\n\r\nconst ProfileDescription = ({ profile, isOwner, goToEditMode }) => {\r\n\r\n  let profileContacts = Object.entries(profile?.contacts).map((contact, index) => {\r\n    return contact[1]\r\n      ? <li key={index}><strong>{contact[0]}: </strong>{contact[1]}</li>\r\n      : false\r\n  })\r\n\r\n  return (\r\n    <form>\r\n      {isOwner && <button onClick={goToEditMode}>Edit profile</button>}\r\n      <p><strong>Имя:</strong> {profile?.fullName}</p>\r\n      {profile?.aboutMe && <p><strong>Обо мне: </strong>{profile?.aboutMe}</p>}\r\n      {profile?.lookingForAJob && <p><strong>В поиске работы: </strong>{profile?.lookingForAJobDescription}</p>}\r\n      {<ul>{profileContacts}</ul>}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\n// import s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        savePhoto={props.savePhoto}\r\n        updateProfile={props.updateProfile}\r\n        authorizedUserId={props.authorizedUserId}\r\n        errors={props.errors}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, updateProfile } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId ?? this.props.authorizedUserId;\r\n    if (!userId) {\r\n      this.props.history.push('/login');\r\n    } else {\r\n      this.props.getUserProfile(userId);\r\n      this.props.getStatus(userId);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(oldProps) {\r\n    if (this.props.match.params.userId !== oldProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n        updateProfile={this.props.updateProfile}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    errors: state.profilePage.errors\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, updateProfile }),\r\n  withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}