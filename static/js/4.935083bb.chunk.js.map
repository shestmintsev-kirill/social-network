{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","MessageForm","formik","useFormik","initialValues","onSubmit","values","resetForm","addNewMessage","handleSubmit","onBlur","handleBlur","onChange","handleChange","value","placeholder","disabled","dirty","type","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","i","dialogsItems","sendMessage","compose","connect","Component","RedirectComponent","this","React"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+HCG9KC,EAA6B,SAACC,GAChC,MAAO,CACLC,OAAQD,EAAME,KAAKD,S,mCCMRE,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACH,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCDnBC,EAJC,SAACT,GACb,OAAO,qBAAKG,UAAWC,IAAEC,OAAlB,SAA2BL,EAAMU,W,gBCgCtCC,EAAc,SAACX,GAEnB,IAAMY,EAASC,YAAU,CACvBC,cAAe,CACbJ,QAAS,IAEXK,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBjB,EAAMkB,cAAcF,GACpBC,OAIJ,OACE,uBAAMF,SAAUH,EAAOO,aAAvB,UACE,cAAC,IAAD,CACEX,KAAM,UACNY,OAAQR,EAAOS,WACfC,SAAUV,EAAOW,aACjBC,MAAOZ,EAAOI,OAAON,QACrBe,YAAa,uBACf,8BACE,wBACEC,UAAWd,EAAOe,MAClBC,KAAM,SAFR,wBAWOC,EA5DC,SAAC7B,GAEf,IAAIJ,EAAQI,EAAM8B,YAEdC,EAAkBnC,EAAMoC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAY1B,KAAM0B,EAAE1B,KAAMN,GAAIgC,EAAEhC,IAASgC,EAAEhC,OACpFiC,EAAmBvC,EAAMwC,SAASH,KAAI,SAACI,EAAGC,GAAJ,OAAU,cAAC,EAAD,CAAS5B,QAAS2B,EAAE3B,SAAc4B,MAMtF,OAAKtC,EAAMH,OAGT,sBAAKM,UAAWC,IAAE4B,QAAlB,UACE,qBAAK7B,UAAWC,IAAEmC,aAAlB,SACGR,IAEH,sBAAK5B,UAAWC,IAAEgC,SAAlB,UACE,8BAAMD,IACN,8BACE,cAAC,EAAD,CAAajB,cAdD,SAACF,GACnBhB,EAAMwC,YAAYxB,EAAON,oBAGD,cAAC,IAAD,CAAUH,GAAI,aCP3BkC,sBACXC,aAPkB,SAAC9C,GACnB,MAAO,CACHkC,YAAalC,EAAMkC,eAKE,CAAEU,mBJHC,SAACG,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAK7C,MAAMH,OAET,cAAC8C,EAAD,eAAeE,KAAK7C,QAFI,cAAC,IAAD,CAAUO,GAAG,eAHH,GACbuC,IAAMH,WAYtC,OAHqCD,YAAQ/C,EAAR+C,CAAoCE,KIR5DH,CAGbZ","file":"static/js/4.935083bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2LxI5\",\"dialogsItems\":\"Dialogs_dialogsItems__2cXjs\",\"active\":\"Dialogs_active__2Os7R\",\"messages\":\"Dialogs_messages__1b341\",\"message\":\"Dialogs_message__2CCMH\"};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\n\nlet mapStateToPropsForRedirect = (state) => {\n  return {\n    isAuth: state.auth.isAuth\n  }\n}\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to='/login' />\n\n      return <Component {...this.props} />\n    }\n  }\n\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n\n  return ConnectedAuthRedirectComponent;\n}","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from 'react-router';\r\nimport { useFormik } from 'formik';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id} />);\r\n  let messagesElements = state.messages.map((m, i) => <Message message={m.message} key={i} />);\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.message);\r\n  }\r\n\r\n  if (!props.isAuth) return <Redirect to={'./login'} />\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <div>\r\n          <MessageForm addNewMessage={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst MessageForm = (props) => {\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      message: ''\r\n    },\r\n    onSubmit: (values, { resetForm }) => {\r\n      props.addNewMessage(values);\r\n      resetForm();\r\n    }\r\n  })\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <Textarea\r\n        name={'message'}\r\n        onBlur={formik.handleBlur}\r\n        onChange={formik.handleChange}\r\n        value={formik.values.message}\r\n        placeholder={'Enter your message'} />\r\n      <div>\r\n        <button\r\n          disabled={!formik.dirty}\r\n          type={'submit'}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendMessage } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { sendMessage }),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}