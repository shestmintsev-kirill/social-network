{"version":3,"sources":["components/Dialogs/Dialogs.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","hoc/withAuthRedirect.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","MessageForm","formik","useFormik","initialValues","onSubmit","values","resetForm","addNewMessage","handleSubmit","onBlur","handleBlur","onChange","handleChange","value","placeholder","disabled","dirty","type","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","sendMessage","compose","connect","actions","WrappedComponent","restProps"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,mECAnK,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTM,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,E,qCEZHW,EAA6B,SAACC,GAAD,MAA0B,CACzDC,OAAQD,EAAME,KAAKD,S,uCCWRE,EAVyB,SAACC,GACrC,IAAMC,EAAO,YAAcD,EAAME,GAEjC,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCHvBC,EAJsB,SAACT,GAClC,OAAO,qBAAKG,UAAWC,IAAEC,OAAlB,SAA2BL,EAAMU,W,iBCsCtCC,EAA8C,SAACX,GACjD,IAAMY,EAASC,YAAU,CACrBC,cAAe,CACXJ,QAAS,IAEbK,SAAU,SAACC,EAAD,GAA+C,IAAjBC,EAAgB,EAAhBA,UACpCjB,EAAMkB,cAAcF,GACpBC,OAIR,OACI,uBAAMF,SAAUH,EAAOO,aAAvB,UACI,cAAC,IAAD,CACIX,KAAM,UACNY,OAAQR,EAAOS,WACfC,SAAUV,EAAOW,aACjBC,MAAOZ,EAAOI,OAAON,QACrBe,YAAa,uBAEjB,8BACI,wBAAQC,UAAWd,EAAOe,MAAOC,KAAM,SAAvC,wBAQDC,EA5D6B,SAAC7B,GACzC,IAAMJ,EAAQI,EAAM8B,YAEdC,EAAkBnC,EAAMoC,QAAQC,KAAI,SAACC,GAAD,OAAmB,cAAC,EAAD,CAAY1B,KAAM0B,EAAE1B,KAAMN,GAAIgC,EAAEhC,IAASgC,EAAEhC,OAClGiC,EAAmBvC,EAAMwC,SAASH,KAAI,SAACI,EAAgBtD,GAAjB,OAA+B,cAAC,EAAD,CAAS2B,QAAS2B,EAAE3B,SAAc3B,MAM7G,OACI,sBAAKoB,UAAWC,IAAE4B,QAAlB,UACI,qBAAK7B,UAAWC,IAAEkC,aAAlB,SAAiCP,IACjC,sBAAK5B,UAAWC,IAAEgC,SAAlB,UACI,8BAAMD,IACN,8BACI,cAAC,EAAD,CAAajB,cAVP,SAACF,GACnBhB,EAAMuC,YAAYvB,EAAON,qBCClB8B,sBACXC,aAfoB,SAAC7C,GACrB,MAAO,CACHkC,YAAalC,EAAMkC,eAakE,CACrFS,YAAaG,IAAQH,eJVtB,SAA+BI,GASlC,OAAOF,YAAkD9C,EAAlD8C,EAR2C,SAACzC,GAC/C,IAAQH,EAAyBG,EAAzBH,OAAW+C,EAAnB,EAAiC5C,EAAjC,GAEA,OAAKH,EAEE,cAAC8C,EAAD,eAAuBC,IAFV,cAAC,IAAD,CAAUrC,GAAG,gBII1BiC,CAKbX","file":"static/js/4.d4569d43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2LxI5\",\"dialogsItems\":\"Dialogs_dialogsItems__2cXjs\",\"active\":\"Dialogs_active__2Os7R\",\"messages\":\"Dialogs_messages__1b341\",\"message\":\"Dialogs_message__2CCMH\"};","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { AppStateType } from '../redux/redux-store';\n\nconst mapStateToPropsForRedirect = (state: AppStateType) => ({\n    isAuth: state.auth.isAuth,\n});\n\ntype MapPropsType = {\n    isAuth: boolean;\n};\n\nexport function withAuthRedirect<WCP>(WrappedComponent: React.ComponentType<WCP>) {\n    const RedirectComponent: React.FC<MapPropsType> = (props) => {\n        const { isAuth, ...restProps } = props;\n\n        if (!isAuth) return <Redirect to=\"/login\" />;\n\n        return <WrappedComponent {...(restProps as WCP)} />;\n    };\n\n    return connect<MapPropsType, unknown, WCP, AppStateType>(mapStateToPropsForRedirect)(RedirectComponent);\n}\n","import s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    name: string;\r\n    id: number;\r\n};\r\nconst DialogItem: React.FC<PropsType> = (props) => {\r\n    const path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;\r\n","import s from './../Dialogs.module.css';\r\n\r\ntype PropsType = {\r\n    message: string;\r\n};\r\nconst Message: React.FC<PropsType> = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { useFormik } from 'formik';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { DialogType, InitialDialogsStateType, MessageType } from '../../redux/dialogs-reducer';\r\n\r\ntype DialogsPropsType = {\r\n    dialogsPage: InitialDialogsStateType;\r\n    sendMessage: (message: string) => void;\r\n};\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n    const state = props.dialogsPage;\r\n\r\n    const dialogsElements = state.dialogs.map((d: DialogType) => <DialogItem name={d.name} id={d.id} key={d.id} />);\r\n    const messagesElements = state.messages.map((m: MessageType, i: number) => <Message message={m.message} key={i} />);\r\n\r\n    const addNewMessage = (values: MessageValuesType) => {\r\n        props.sendMessage(values.message);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>{dialogsElements}</div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <MessageForm addNewMessage={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype MessageValuesType = {\r\n    message: string;\r\n};\r\n\r\ntype MessageFormPropsType = {\r\n    addNewMessage: (values: MessageValuesType) => void;\r\n};\r\n\r\nconst MessageForm: React.FC<MessageFormPropsType> = (props) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            message: '',\r\n        },\r\n        onSubmit: (values: MessageValuesType, { resetForm }) => {\r\n            props.addNewMessage(values);\r\n            resetForm();\r\n        },\r\n    });\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <Textarea\r\n                name={'message'}\r\n                onBlur={formik.handleBlur}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.message}\r\n                placeholder={'Enter your message'}\r\n            />\r\n            <div>\r\n                <button disabled={!formik.dirty} type={'submit'}>\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { InitialDialogsStateType, actions } from '../../redux/dialogs-reducer';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport Dialogs from './Dialogs';\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    };\r\n};\r\n\r\nexport type MapStatePropsType = {\r\n    dialogsPage: InitialDialogsStateType;\r\n};\r\n\r\nexport type MapDispatchPropsType = {\r\n    sendMessage: (message: string) => void;\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, unknown, AppStateType>(mapStateToProps, {\r\n        sendMessage: actions.sendMessage,\r\n    }),\r\n    withAuthRedirect,\r\n)(Dialogs);\r\n"],"sourceRoot":""}