{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","alt","message","likesCount","PostForm","formik","useFormik","initialValues","post","onSubmit","values","resetForm","addNewPost","handleSubmit","name","onBlur","handleBlur","onChange","handleChange","value","placeholder","disabled","dirty","type","MyPosts","postsElements","posts","map","p","i","postsBlock","addPost","MyPostsContainer","connect","state","profilePage","newPostText","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","e","target","updateStatus","autoFocus","onDoubleClick","ProfileInfo","profile","descriptionBlock","photos","large","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","history","push","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.1259f8b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3BStp\",\"posts\":\"MyPosts_posts__2Eaxb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1myGU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__yZg9c\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://cdn-icons-png.flaticon.com/512/149/149071.png' alt=''/>\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import { useFormik } from 'formik';\r\nimport React from 'react';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements =\r\n    props.posts.map((p, i) => <Post message={p.message} likesCount={p.likesCount} key={i} />);\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.post);\r\n  }\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <PostForm addNewPost={addNewPost} />\r\n      </div>\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst PostForm = (props) => {\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      post: ''\r\n    },\r\n    onSubmit: (values, { resetForm }) => {\r\n      props.addNewPost(values);\r\n      resetForm();\r\n    }\r\n  })\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <Textarea\r\n        name={'post'}\r\n        onBlur={formik.handleBlur}\r\n        onChange={formik.handleChange}\r\n        value={formik.values.post}\r\n        placeholder={'Enter your post'} />\r\n      <div>\r\n        <button\r\n          disabled={!formik.dirty}\r\n          type={'submit'}\r\n        >\r\n          Add post\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default MyPosts;","import { connect } from \"react-redux\";\r\nimport { addPost } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, { useEffect, useState } from \"react\";\n// import s from './ProfileInfo.module.css';\n\nconst ProfileStatus = (props) => {\n\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status])\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n\n  const onStatusChange = (e) => {\n    setStatus(e.target.value)\n  }\n\n  return (\n    <div>\n      {editMode\n        ? <div>\n          Статус: <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus type=\"text\" value={status} />\n        </div>\n        : <div>\n          <span onDoubleClick={activateEditMode} >Статус: {props.status || 'Нет статуса'}</span>\n        </div>\n      }\n    </div >\n  );\n}\n\nexport default ProfileStatus;","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatus';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile?.photos?.large\r\n          ? profile?.photos?.large\r\n          : 'https://www.kindpng.com/picc/m/130-1300217_user-icon-member-icon-png-transparent-png.png'}\r\n          alt=\"avatar\" />\r\n      </div>\r\n      <p>Имя: {profile?.fullName}</p>\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      {profile?.aboutMe && <p>Обо мне: {profile?.aboutMe}</p>}\r\n      {profile?.lookingForAJob && <p>В поиске работы: {profile?.lookingForAJobDescription}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\n// import s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId ?? this.props.authorizedUserId;\r\n    if (!userId) {\r\n      this.props.history.push('/login');\r\n    } else {\r\n      this.props.getUserProfile(userId);\r\n      this.props.getStatus(userId);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}